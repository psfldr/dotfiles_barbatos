- name: Set up user
  hosts: local
  tasks:
    - name: debug var
      debug:
        msg:
          OS: "{{ ansible_os_family }}"
          Host name: "{{ ansible_hostname }}"
          User name: "{{ ansible_env.USER }}"

    - name: Assert that user is root
      assert:
        that:
          - ansible_env.USER == 'root'
        fail_msg: "user must be root"
        success_msg: "user is root"

    - name: Ensure a locale exists
      community.general.locale_gen: name={{ item }} state=present
      with_items:
        - en_US.UTF-8
        - ja_JP.UTF-8

    - name: Ensure group "wheel" exists
      group:
        name: wheel

    - name: Make sure users in the wheel group can sudo without password
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^# %wheel ALL=(ALL) NOPASSWD: ALL'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/sbin/visudo -c -f %s'

    - name: Ensure user '{{ user_name }}' exists
      user:
        name: "{{ user_name }}"
        shell: /bin/bash
        create_home: yes
        generate_ssh_key: yes
        comment: "{{ user_name }}"
        group: wheel

    - name: Rename id_rsa.pub -> authorized_keys
      shell: "mv ~{{ user_name }}/.ssh/{id_rsa.pub,authorized_keys}"
      args:
        creates: "~{{ user_name }}/.ssh/authorized_keys"

    - name: Copy secret key to root
      copy:
        src: "/home/{{ user_name }}/.ssh/id_rsa"
        dest: "/root/id_rsa_{{ ansible_hostname }}_{{ user_name }}"
        mode: 0600

    - name: Install packages
      package:
        name:
          - sudo
          - avahi
          - nss-mdns
        state: present

    # Setup Avahi
    # https://wiki.archlinux.jp/index.php/Avahi#.E3.83.9B.E3.82.B9.E3.83.88.E5.90.8D.E3.81.AE.E8.A7.A3.E6.B1.BA
    - name: Make sure a service unit is running
      systemd:
        name: avahi-daemon.service
        state: started
        enabled: yes

    #  「hosts」の行に関して、「mdns_minimal」が入っていない場合のみ
    # 「resolve\s」の手前のスペースを
    # 「 mdns_minimal [NOTFOUND=return] 」に置き換える。
    - name: Make sure 'mdns_minimal [NOTFOUND=return]' exists in the line starts with 'hosts'
      replace:
        path: /etc/nsswitch.conf
        regexp: '(?!.*mdns_minimal)(hosts:.*)(\s)(resolve\s.*)'
        replace: '\1 mdns_minimal [NOTFOUND=return] \3'

    - name: Create user to aur_builder
      user:
        name: aur_builder
        group: wheel
      become: yes

    - name: Configure user aur_builder
      lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'
      become: yes

